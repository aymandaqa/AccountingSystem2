@model AccountingSystem.ViewModels.BranchExpensesReportViewModel
@using AccountingSystem.ViewModels
@using System.Linq
@{
    ViewData["Title"] = "تقرير مصروفات الفروع";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h4 class="mb-0"><i class="fas fa-code-branch me-2"></i>تقرير مصروفات الفروع</h4>
                    <span class="small">يعرض إجمالي المصاريف لكل فرع موزعة حسب الفترة المختارة</span>
                </div>
                <div class="card-body">
                    <form method="get" class="row g-3 mb-4">
                        <div class="col-lg-4 col-md-6">
                            <label class="form-label">الفروع</label>
                            <select name="branchIds" class="form-select" multiple size="6">
                                @foreach (var branch in Model.Branches)
                                {
                                    var isSelected = int.TryParse(branch.Value, out var branchId) && Model.SelectedBranchIds.Contains(branchId);
                                    <option value="@branch.Value" selected="@(isSelected ? "selected" : null)">@branch.Text</option>
                                }
                            </select>
                            <small class="text-muted">استخدم Ctrl أو Shift للاختيار المتعدد</small>
                        </div>
                        <div class="col-lg-2 col-md-3">
                            <label class="form-label">من تاريخ</label>
                            <input type="date" name="fromDate" class="form-control" value="@Model.FromDate.ToString("yyyy-MM-dd")" />
                        </div>
                        <div class="col-lg-2 col-md-3">
                            <label class="form-label">إلى تاريخ</label>
                            <input type="date" name="toDate" class="form-control" value="@Model.ToDate.ToString("yyyy-MM-dd")" />
                        </div>
                        <div class="col-lg-2 col-md-3">
                            <label class="form-label">فترة التجميع</label>
                            <select name="periodGrouping" class="form-select">
                                <option value="Monthly" selected="@(Model.PeriodGrouping == BranchExpensesPeriodGrouping.Monthly ? "selected" : null)">شهري</option>
                                <option value="Quarterly" selected="@(Model.PeriodGrouping == BranchExpensesPeriodGrouping.Quarterly ? "selected" : null)">ربع سنوي</option>
                                <option value="Yearly" selected="@(Model.PeriodGrouping == BranchExpensesPeriodGrouping.Yearly ? "selected" : null)">سنوي</option>
                            </select>
                        </div>
                        <div class="col-lg-4 col-md-6">
                            <label class="form-label d-block">طريقة العرض</label>
                            <div class="btn-group w-100" role="group">
                                <input type="radio" class="btn-check" name="viewMode" id="viewModeBranch" value="ByBranch" @(Model.ViewMode == BranchExpensesViewMode.ByBranch ? "checked" : null) />
                                <label class="btn btn-outline-primary" for="viewModeBranch"><i class="fas fa-network-wired me-1"></i>حسب كل فرع</label>
                                <input type="radio" class="btn-check" name="viewMode" id="viewModeCombined" value="Combined" @(Model.ViewMode == BranchExpensesViewMode.Combined ? "checked" : null) />
                                <label class="btn btn-outline-primary" for="viewModeCombined"><i class="fas fa-layer-group me-1"></i>إجمالي الفروع</label>
                            </div>
                            <small class="text-muted d-block mt-1">حدد ما إذا كنت ترغب في عرض كل فرع على حدة أو دمج الفروع المختارة في صف واحد</small>
                        </div>
                        <div class="col-lg-4 col-md-6 align-self-end">
                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-primary flex-grow-1">
                                    <i class="fas fa-search me-1"></i>عرض التقرير
                                </button>
                                <a asp-action="BranchExpenses" class="btn btn-outline-secondary">
                                    <i class="fas fa-undo me-1"></i>إعادة تعيين
                                </a>
                            </div>
                        </div>
                    </form>

                    @if (Model.HasResults)
                    {
                        var periodDescription = Model.PeriodGrouping switch
                        {
                            BranchExpensesPeriodGrouping.Monthly => "شهري",
                            BranchExpensesPeriodGrouping.Quarterly => "ربع سنوي",
                            BranchExpensesPeriodGrouping.Yearly => "سنوي",
                            _ => "شهري"
                        };
                        var branchSummary = Model.ViewMode == BranchExpensesViewMode.Combined
                        ? (Model.SelectedBranchIds.Any()
                        ? $"إجمالي {Model.SelectedBranchIds.Count} فرع/فروع"
                        : "إجمالي جميع الفروع")
                        : (Model.SelectedBranchIds.Any()
                        ? $"عدد الفروع المختارة: {Model.SelectedBranchIds.Count}"
                        : "جميع الفروع");
                        var selectedBranchNames = Model.SelectedBranchIds.Any()
                        ? string.Join("، ", Model.Branches
                        .Where(b => int.TryParse(b.Value, out var id) && Model.SelectedBranchIds.Contains(id))
                        .Select(b => b.Text))
                        : string.Empty;
                        <div class="alert alert-info d-flex align-items-center gap-3">
                            <i class="fas fa-info-circle fa-lg"></i>
                            <div>
                                <div>من <strong>@Model.FromDate:dd/MM/yyyy</strong> إلى <strong>@Model.ToDate:dd/MM/yyyy</strong> - تجميع <strong>@periodDescription</strong></div>
                                <div>@branchSummary</div>
                                @if (!string.IsNullOrWhiteSpace(selectedBranchNames))
                                {
                                    <div>الفروع: @selectedBranchNames</div>
                                }
                            </div>
                        </div>
                        <div class="table-responsive">
                            @{
                                var rows = Model.Rows;
                            }
                            <table class="table table-bordered table-hover align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th style="min-width: 180px;">@("الفترة")</th>
                                        @if (Model.ViewMode == BranchExpensesViewMode.Combined)
                                        {
                                            <th class="text-end">إجمالي الفروع</th>
                                        }
                                        else
                                        {
                                            foreach (var row in rows)
                                            {
                                                <th class="text-end">@row.BranchName</th>
                                            }
                                        }
                                        <th class="text-end">الإجمالي</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var column in Model.Columns)
                                    {
                                        var periodRange = $"{column.PeriodStart:dd/MM/yyyy} - {column.PeriodEnd:dd/MM/yyyy}";
                                        <tr>
                                            <td title="@periodRange">@column.Label</td>
                                            @if (Model.ViewMode == BranchExpensesViewMode.Combined)
                                            {
                                                var combinedRow = rows.FirstOrDefault();
                                                var amount = combinedRow?.Amounts.TryGetValue(column.PeriodStart, out var value) == true ? value : 0m;
                                                <td class="text-end">@amount.ToString("N2")</td>
                                            }
                                            else
                                            {
                                                foreach (var row in rows)
                                                {
                                                    var amount = row.Amounts.TryGetValue(column.PeriodStart, out var value) ? value : 0m;
                                                    <td class="text-end">@amount.ToString("N2")</td>
                                                }
                                            }

                                            var total = Model.ColumnTotals.TryGetValue(column.PeriodStart, out var periodTotal) ? periodTotal : 0m;
                                            @*                                             <td class="text-end fw-bold">@total.ToString("N2")</td>
 *@                                        </tr>
                                    }
                                </tbody>
                                <tfoot class="table-secondary">
                                    <tr class="fw-bold">
                                        <td>الإجمالي</td>
                                        @if (Model.ViewMode == BranchExpensesViewMode.Combined)
                                        {
                                            var combinedRow = rows.FirstOrDefault();
                                            <td class="text-end">@((combinedRow?.Total ?? 0m).ToString("N2"))</td>
                                        }
                                        else
                                        {
                                            foreach (var row in rows)
                                            {
                                                <td class="text-end">@row.Total.ToString("N2")</td>
                                            }
                                        }
                                        <td class="text-end">@Model.GrandTotal.ToString("N2")</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                    else if (Model.FiltersApplied)
                    {
                        <div class="text-center text-muted py-5">
                            <i class="fas fa-inbox fa-2x mb-3"></i>
                            <p class="mb-0">لا توجد بيانات ضمن الفترة المحددة.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
