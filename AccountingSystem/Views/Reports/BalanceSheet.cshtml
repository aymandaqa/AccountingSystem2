@model AccountingSystem.ViewModels.BalanceSheetViewModel
@{
    ViewData["Title"] = "الميزانية العمومية";
    var totalLiabilitiesAndEquity = Model.TotalLiabilities + Model.TotalEquity;
    var totalLiabilitiesAndEquityBase = Model.TotalLiabilitiesBase + Model.TotalEquityBase;
    var difference = Model.TotalAssets - totalLiabilitiesAndEquity;
    var differenceBase = Model.TotalAssetsBase - totalLiabilitiesAndEquityBase;
}

<div class="container-fluid balance-sheet-page">
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex flex-wrap align-items-center justify-content-between gap-2">
                        <h4 class="mb-0">
                            <i class="fas fa-balance-scale me-2"></i>
                            الميزانية العمومية
                        </h4>
                        <span class="badge bg-light text-primary fw-bold">
                            كما في: @Model.AsOfDate.ToString("dd/MM/yyyy")
                        </span>
                    </div>
                </div>
                <div class="card-body">
                    <form method="get" class="row g-3 mb-4 align-items-end balance-sheet-filters">
                        <div class="col-sm-6 col-lg-3">
                            <label for="branchId" class="form-label">الفرع:</label>
                            <select name="branchId" id="branchId" class="form-select">
                                <option value="">جميع الفروع</option>
                                @foreach (var branch in Model.Branches)
                                {
                                    <option value="@branch.Value" selected="@(branch.Value == Model.BranchId?.ToString())">@branch.Text</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="asOfDate" class="form-label">كما في تاريخ:</label>
                            <input type="date" name="asOfDate" id="asOfDate" class="form-control" value="@Model.AsOfDate.ToString("yyyy-MM-dd")" />
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="currencyId" class="form-label">العملة:</label>
                            <select name="currencyId" id="currencyId" class="form-select">
                                @foreach (var currency in Model.Currencies)
                                {
                                    <option value="@currency.Value" selected="@(currency.Value == Model.SelectedCurrencyId?.ToString())">@currency.Text</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-flex flex-column flex-lg-row gap-2">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="includePending" value="true" @(Model.IncludePending ? "checked" : string.Empty) id="includePending" />
                                    <label class="form-check-label" for="includePending">شمل القيود غير المرحلة</label>
                                </div>
                                <div class="d-flex gap-2 flex-wrap">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-search me-1"></i>
                                        عرض التقرير
                                    </button>
                                    @if (Model.Assets.Any() || Model.Liabilities.Any() || Model.Equity.Any())
                                    {
                                        <a class="btn btn-outline-secondary" href="@Url.Action("BalanceSheetPdf", new { branchId = Model.BranchId, asOfDate = Model.AsOfDate.ToString("yyyy-MM-dd"), includePending = Model.IncludePending, currencyId = Model.SelectedCurrencyId })">
                                            <i class="fas fa-file-pdf me-1"></i> PDF
                                        </a>
                                        <a class="btn btn-outline-success" href="@Url.Action("BalanceSheetExcel", new { branchId = Model.BranchId, asOfDate = Model.AsOfDate.ToString("yyyy-MM-dd"), includePending = Model.IncludePending, currencyId = Model.SelectedCurrencyId })">
                                            <i class="fas fa-file-excel me-1"></i> Excel
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </form>

                    @if (!Model.Assets.Any() && !Model.Liabilities.Any() && !Model.Equity.Any())
                    {
                        <div class="alert alert-info text-center mb-0">لا توجد بيانات متاحة للفترة المختارة.</div>
                    }
                    else
                    {
                        ViewData["SelectedCurrencyCode"] = Model.SelectedCurrencyCode;
                        ViewData["BaseCurrencyCode"] = Model.BaseCurrencyCode;

                        <div class="row g-3 mb-4 balance-sheet-summary">
                            <div class="col-md-4">
                                <div class="summary-card border-success">
                                    <div class="summary-title text-success">إجمالي الأصول</div>
                                    <div class="summary-amount">@Model.TotalAssets.ToString("N2") <span class="currency">@Model.SelectedCurrencyCode</span></div>
                                    <div class="summary-amount-base text-muted">(@Model.TotalAssetsBase.ToString("N2") @Model.BaseCurrencyCode)</div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="summary-card border-warning">
                                    <div class="summary-title text-warning">إجمالي الخصوم وحقوق الملكية</div>
                                    <div class="summary-amount">@totalLiabilitiesAndEquity.ToString("N2") <span class="currency">@Model.SelectedCurrencyCode</span></div>
                                    <div class="summary-amount-base text-muted">(@totalLiabilitiesAndEquityBase.ToString("N2") @Model.BaseCurrencyCode)</div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="summary-card border-info">
                                    <div class="summary-title text-info">الفارق</div>
                                    <div class="summary-amount @(Math.Abs(difference) < 0.01m ? "text-success" : "text-danger")">
                                        @difference.ToString("N2") <span class="currency">@Model.SelectedCurrencyCode</span>
                                    </div>
                                    <div class="summary-amount-base text-muted">(@differenceBase.ToString("N2") @Model.BaseCurrencyCode)</div>
                                    <div class="mt-2">
                                        @if (Model.IsBalanced)
                                        {
                                            <span class="badge bg-success">الميزانية متوازنة</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">الميزانية غير متوازنة</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row g-4 balance-sheet-grid">
                            <div class="col-12 col-xl-6">
                                <div class="balance-card">
                                    <div class="balance-card-header bg-success text-white">
                                        الأصول
                                    </div>
                                    <div class="balance-card-body">
                                        <table class="table table-sm balance-sheet-table">
                                            <thead>
                                                <tr>
                                                    <th>البند</th>
                                                    <th class="text-end">الرصيد (@Model.SelectedCurrencyCode)</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @await Html.PartialAsync("_AccountBalanceTableRows", Model.Assets)
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <th>إجمالي الأصول</th>
                                                    <th class="text-end text-success">@Model.TotalAssets.ToString("N2")</th>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-xl-6">
                                <div class="balance-card">
                                    <div class="balance-card-header bg-danger text-white">
                                        الخصوم وحقوق الملكية
                                    </div>
                                    <div class="balance-card-body">
                                        <div class="section-title text-danger">الخصوم</div>
                                        <table class="table table-sm balance-sheet-table mb-4">
                                            <thead>
                                                <tr>
                                                    <th>البند</th>
                                                    <th class="text-end">الرصيد (@Model.SelectedCurrencyCode)</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @await Html.PartialAsync("_AccountBalanceTableRows", Model.Liabilities)
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <th>إجمالي الخصوم</th>
                                                    <th class="text-end text-danger">@Model.TotalLiabilities.ToString("N2")</th>
                                                </tr>
                                            </tfoot>
                                        </table>

                                        <div class="section-title text-info">حقوق الملكية</div>
                                        <table class="table table-sm balance-sheet-table">
                                            <thead>
                                                <tr>
                                                    <th>البند</th>
                                                    <th class="text-end">الرصيد (@Model.SelectedCurrencyCode)</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @await Html.PartialAsync("_AccountBalanceTableRows", Model.Equity)
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <th>إجمالي حقوق الملكية</th>
                                                    <th class="text-end text-info">@Model.TotalEquity.ToString("N2")</th>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .balance-sheet-page {
            font-family: 'Cairo', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .balance-sheet-filters .form-check {
            margin-bottom: 0;
        }

        .summary-card {
            border: 1px solid rgba(0, 0, 0, 0.08);
            border-radius: 0.75rem;
            padding: 1rem 1.25rem;
            background-color: #fff;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.04);
            height: 100%;
        }

        .summary-title {
            font-size: 0.95rem;
            font-weight: 600;
            margin-bottom: 0.35rem;
        }

        .summary-amount {
            font-size: 1.4rem;
            font-weight: 700;
        }

        .summary-amount .currency {
            font-size: 0.9rem;
            font-weight: 400;
        }

        .summary-amount-base {
            font-size: 0.85rem;
        }

        .balance-card {
            border: 1px solid rgba(0, 0, 0, 0.08);
            border-radius: 0.75rem;
            overflow: hidden;
            background-color: #fff;
            box-shadow: 0 8px 18px rgba(0, 0, 0, 0.05);
        }

        .balance-card-header {
            padding: 0.85rem 1.25rem;
            font-size: 1.1rem;
            font-weight: 700;
            text-align: center;
            letter-spacing: 0.5px;
        }

        .balance-card-body {
            padding: 1.25rem;
        }

        .section-title {
            font-weight: 700;
            font-size: 1rem;
            margin-bottom: 0.75rem;
        }

        .balance-sheet-table {
            border: 1px solid #e9ecef;
            border-radius: 0.75rem;
            overflow: hidden;
            background: #fff;
        }

        .balance-sheet-table thead {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            font-weight: 600;
        }

        .balance-sheet-table th,
        .balance-sheet-table td {
            vertical-align: middle;
            padding: 0.6rem 0.75rem;
        }

        .balance-sheet-row {
            transition: background-color 0.2s ease-in-out;
        }

        .balance-sheet-row:hover {
            background-color: rgba(13, 110, 253, 0.08);
        }

        .balance-sheet-row.bs-row-root {
            background-color: rgba(255, 193, 7, 0.15);
            font-weight: 700;
        }

        .balance-sheet-row.bs-row-group {
            background-color: rgba(255, 243, 205, 0.6);
            font-weight: 600;
        }

        .balance-sheet-row.bs-row-leaf .account-name {
            font-weight: 500;
        }

        .balance-sheet-label {
            display: flex;
            align-items: center;
            gap: 0.6rem;
            flex-wrap: wrap;
        }

        .balance-toggle {
            background: none;
            border: none;
            color: #0d6efd;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 1.35rem;
            height: 1.35rem;
            padding: 0;
            font-size: 1.1rem;
            cursor: pointer;
        }

        .balance-toggle:hover,
        .balance-toggle:focus {
            color: #0a58ca;
            outline: none;
        }

        .balance-toggle-placeholder {
            display: inline-flex;
            width: 1.35rem;
            height: 1.35rem;
        }

        .balance-sheet-row.is-collapsed {
            background-color: rgba(255, 243, 205, 0.45);
        }

        .balance-sheet-label .account-code {
            font-weight: 600;
            color: #6c757d;
        }

        .balance-sheet-label .account-name {
            color: #212529;
        }

        .balance-sheet-label .account-currency {
            font-size: 0.85rem;
        }

        @media (max-width: 767.98px) {
            .summary-amount {
                font-size: 1.15rem;
            }

            .balance-sheet-label {
                flex-direction: column;
                align-items: flex-start;
            }
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tables = document.querySelectorAll('.balance-sheet-table');

            tables.forEach(function (table) {
                const rows = Array.from(table.querySelectorAll('.balance-sheet-row'));
                if (!rows.length) {
                    return;
                }

                const rowMap = new Map();
                rows.forEach(function (row) {
                    const nodeId = row.dataset.nodeId;
                    if (nodeId) {
                        rowMap.set(nodeId, row);
                    }

                    if (row.dataset.hasChildren === 'true' && !row.dataset.expanded) {
                        row.dataset.expanded = 'true';
                    }
                });

                function updateToggleIcon(row) {
                    if (row.dataset.hasChildren !== 'true') {
                        return;
                    }

                    const toggle = row.querySelector('.balance-toggle');
                    if (!toggle) {
                        return;
                    }

                    const icon = toggle.querySelector('i');
                    const isExpanded = row.dataset.expanded !== 'false';

                    if (icon) {
                        icon.className = isExpanded ? 'fas fa-minus-square' : 'fas fa-plus-square';
                    }

                    toggle.setAttribute('aria-expanded', isExpanded ? 'true' : 'false');
                    row.classList.toggle('is-collapsed', !isExpanded);
                }

                function isAncestorCollapsed(row) {
                    let parentId = row.dataset.parentId;

                    while (parentId) {
                        const parentRow = rowMap.get(parentId);
                        if (!parentRow) {
                            break;
                        }

                        if (parentRow.dataset.expanded === 'false') {
                            return true;
                        }

                        parentId = parentRow.dataset.parentId;
                    }

                    return false;
                }

                function applyVisibility() {
                    rows.forEach(function (row) {
                        if (isAncestorCollapsed(row)) {
                            row.style.display = 'none';
                        } else {
                            row.style.display = '';
                        }

                        updateToggleIcon(row);
                    });
                }

                rows.forEach(function (row) {
                    if (row.dataset.hasChildren === 'true') {
                        const toggle = row.querySelector('.balance-toggle');
                        if (toggle) {
                            toggle.addEventListener('click', function (event) {
                                event.preventDefault();
                                event.stopPropagation();

                                const isExpanded = row.dataset.expanded !== 'false';
                                row.dataset.expanded = isExpanded ? 'false' : 'true';

                                applyVisibility();
                            });
                        }
                    }
                });

                applyVisibility();
            });
        });
    </script>
}
