@model IEnumerable<AccountingSystem.Models.PaymentTransfer>

<h2>الحوالات</h2>
@{
    var pending = Model.Where(t => t.Status == TransferStatus.Pending).ToList();
    var accepted = Model.Where(t => t.Status == TransferStatus.Accepted).ToList();
    var rejected = Model.Where(t => t.Status == TransferStatus.Rejected).ToList();
}

<ul class="nav nav-tabs" id="transferTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#pending" type="button" role="tab">قيد الانتظار (@pending.Count)</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#accepted" type="button" role="tab">مقبولة (@accepted.Count)</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#rejected" type="button" role="tab">مرفوضة (@rejected.Count)</button>
    </li>
</ul>
<div class="tab-content mt-3">
    <div class="tab-pane fade show active" id="pending" role="tabpanel">
        @await Html.PartialAsync("_TransferTable", pending)
    </div>
    <div class="tab-pane fade" id="accepted" role="tabpanel">
        @await Html.PartialAsync("_TransferTable", accepted)
    </div>
    <div class="tab-pane fade" id="rejected" role="tabpanel">
        @await Html.PartialAsync("_TransferTable", rejected)
    </div>
</div>

<a asp-action="Create" class="btn btn-primary" asp-require-permission="transfers.create">إنشاء حوالة</a>
