@using AccountingSystem.Models
@using System.Linq
@model IEnumerable<AccountingSystem.Models.PaymentTransfer>
@{
    ViewData["Title"] = "إدارة الحوالات";
    var pending = Model.Where(t => t.Status == TransferStatus.Pending).ToList();
    var accepted = Model.Where(t => t.Status == TransferStatus.Accepted).ToList();
    var rejected = Model.Where(t => t.Status == TransferStatus.Rejected).ToList();
}

<h2 class="mb-3">إدارة الحوالات</h2>
<p class="text-muted">استعرض جميع الحوالات في النظام وتابع حالتها أو قم بتعديلها والموافقة عليها.</p>

<ul class="nav nav-tabs" id="manageTransferTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#pendingTransfers" type="button" role="tab">قيد الانتظار (@pending.Count)</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#acceptedTransfers" type="button" role="tab">مقبولة (@accepted.Count)</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#rejectedTransfers" type="button" role="tab">مرفوضة (@rejected.Count)</button>
    </li>
</ul>
<div class="tab-content mt-3">
    <div class="tab-pane fade show active" id="pendingTransfers" role="tabpanel">
        @await Html.PartialAsync("_TransferTable", pending)
    </div>
    <div class="tab-pane fade" id="acceptedTransfers" role="tabpanel">
        @await Html.PartialAsync("_TransferTable", accepted)
    </div>
    <div class="tab-pane fade" id="rejectedTransfers" role="tabpanel">
        @await Html.PartialAsync("_TransferTable", rejected)
    </div>
</div>

<div class="mt-3 d-flex gap-2">
    <a asp-action="Index" class="btn btn-outline-secondary" asp-require-permission="transfers.view">عرض حوالاتي</a>
    <a asp-action="Create" class="btn btn-primary" asp-require-permission="transfers.create">إنشاء حوالة جديدة</a>
</div>
