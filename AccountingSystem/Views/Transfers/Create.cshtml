@model AccountingSystem.ViewModels.TransferCreateViewModel
@using System.Text.Json

@{
    ViewData["Title"] = "إنشاء حوالة";
    var jsonOptions = new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase };
    var branchesJson = JsonSerializer.Serialize(Model.ReceiverBranches, jsonOptions);
    var accountsJson = JsonSerializer.Serialize(Model.ReceiverAccounts, jsonOptions);
}

<h2>إنشاء حوالة</h2>

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="FromPaymentAccountId"></label>
        <select asp-for="FromPaymentAccountId" class="form-control" id="senderAccountSelect">
            <option value="">اختر حساب الإرسال</option>
            @foreach (var account in Model.SenderAccounts)
            {
                <option value="@account.AccountId"
                        data-currency-id="@account.CurrencyId"
                        data-currency-code="@account.CurrencyCode"
                        selected="@(Model.FromPaymentAccountId == account.AccountId)">
                    @account.DisplayName
                </option>
            }
        </select>
        <span asp-validation-for="FromPaymentAccountId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ReceiverId"></label>
        <select asp-for="ReceiverId" class="form-control" id="receiverSelect">
            <option value="">اختر المستلم</option>
            @foreach (var receiver in Model.Receivers)
            {
                <option value="@receiver.Value" selected="@receiver.Selected">@receiver.Text</option>
            }
        </select>
        <span asp-validation-for="ReceiverId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>فرع الإرسال</label>
        <input type="text" class="form-control" value="@Model.SenderBranch" disabled />
    </div>
    <div class="form-group">
        <label>فرع الاستقبال</label>
        <input type="text" id="receiverBranch" class="form-control" disabled />
    </div>
    <div class="form-group">
        <label>حساب المستلم</label>
        <input type="text" id="receiverAccountDisplay" class="form-control" disabled />
    </div>

    <div class="form-group">
        <label asp-for="Amount"></label>
        <input asp-for="Amount" class="form-control" />
        <span asp-validation-for="Amount" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Notes"></label>
        <textarea asp-for="Notes" class="form-control"></textarea>
        <span asp-validation-for="Notes" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">إرسال</button>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const branches = @Html.Raw(branchesJson);
        const receiverAccounts = @Html.Raw(accountsJson);
        const branchInput = document.getElementById('receiverBranch');
        const accountDisplay = document.getElementById('receiverAccountDisplay');
        const receiverSelect = document.getElementById('receiverSelect');
        const senderAccountSelect = document.getElementById('senderAccountSelect');

        function updateReceiverInfo() {
            const receiverId = receiverSelect.value;
            branchInput.value = branches[receiverId] || '';

            const selectedOption = senderAccountSelect.options[senderAccountSelect.selectedIndex];
            const currencyIdValue = selectedOption ? Number(selectedOption.dataset.currencyId) : null;
            const hasCurrency = Number.isFinite(currencyIdValue);
            const accounts = receiverAccounts[receiverId] || [];
            const matchingAccount = hasCurrency ? accounts.find(a => a.currencyId === currencyIdValue) : null;

            if (matchingAccount) {
                accountDisplay.value = matchingAccount.displayName;
            } else if (receiverId && hasCurrency) {
                accountDisplay.value = 'لا يوجد حساب متاح بنفس العملة';
            } else {
                accountDisplay.value = '';
            }
        }

        receiverSelect.addEventListener('change', updateReceiverInfo);
        senderAccountSelect.addEventListener('change', updateReceiverInfo);
        updateReceiverInfo();
    </script>
}
