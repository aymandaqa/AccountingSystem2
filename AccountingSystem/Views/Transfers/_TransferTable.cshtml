@using AccountingSystem.Models
@model IEnumerable<AccountingSystem.Models.PaymentTransfer>
@using System.Collections.Generic
@using System.Linq
@{
    var breakdowns = ViewBag.TransferCurrencyBreakdowns as Dictionary<int, Dictionary<int, int>> ?? new();
    var unitNames = ViewBag.CurrencyUnitNames as Dictionary<int, string> ?? new();
    var canManageTransfers = ViewBag.CanManageTransfers as bool? ?? false;
    var currentUserId = ViewBag.CurrentUserId as string ?? string.Empty;
    var isManageView = ViewBag.IsManageView as bool? ?? false;
    var returnUrl = isManageView ? Url.Action("Manage", "Transfers") : null;
    var approvePermission = canManageTransfers ? "transfers.manage" : "transfers.approve";
    var editPermission = canManageTransfers ? "transfers.manage" : "transfers.create";
    var deletePermission = canManageTransfers ? "transfers.manage" : "transfers.create";
    var printPermission = canManageTransfers ? "transfers.manage" : "transfers.view";
    var statusStyles = new Dictionary<TransferStatus, (string Label, string CssClass)>
    {
        [TransferStatus.Pending] = ("قيد الانتظار", "bg-warning text-dark"),
        [TransferStatus.Accepted] = ("مقبولة", "bg-success"),
        [TransferStatus.Rejected] = ("مرفوضة", "bg-danger")
    };
}

<table class="table">
    <thead>
        <tr>
            <th>المرسل</th>
            <th>فرع الإرسال</th>
            <th>المستلم</th>
            <th>فرع الاستقبال</th>
            <th>المبلغ</th>
            <th>تفاصيل الفئات</th>
            <th>الحالة</th>
            <th>التاريخ</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>@(item.Sender?.FullName ?? item.SenderId)</td>
            <td>@item.FromBranch?.NameAr</td>
            <td>@(item.Receiver?.FullName ?? item.ReceiverId)</td>
            <td>@item.ToBranch?.NameAr</td>
            <td>@item.Amount</td>
            <td>
                @if (breakdowns.TryGetValue(item.Id, out var units) && units.Any())
                {
                    <ul class="mb-0 small">
                        @foreach (var entry in units.OrderByDescending(kvp => kvp.Key))
                        {
                            var label = unitNames.TryGetValue(entry.Key, out var name) ? name : $"فئة رقم {entry.Key}";
                            <li>@label: @entry.Value</li>
                        }
                    </ul>
                }
                else
                {
                    <span class="text-muted">-</span>
                }
            </td>
            <td>
                @if (statusStyles.TryGetValue(item.Status, out var style))
                {
                    <span class="badge @style.CssClass">@style.Label</span>
                }
                else
                {
                    <span class="badge bg-secondary">@item.Status</span>
                }
            </td>
            <td>@item.CreatedAt.ToString("dd/MM/yyyy")</td>
            <td>
                <div class="d-flex flex-column gap-1">
                    @if (item.Status == TransferStatus.Pending)
                    {
                        var canApprove = isManageView ? canManageTransfers : item.ReceiverId == currentUserId;
                        var canEdit = canManageTransfers || item.SenderId == currentUserId;

                        if (canApprove)
                        {
                            <div class="d-flex flex-wrap gap-2">
                                <a class="text-success" asp-action="Approve" asp-route-id="@item.Id" asp-route-accept="true" asp-route-returnUrl="@returnUrl" asp-require-permission="@approvePermission">استلام</a>
                                <a class="text-danger" asp-action="Approve" asp-route-id="@item.Id" asp-route-accept="false" asp-route-returnUrl="@returnUrl" asp-require-permission="@approvePermission">رفض</a>
                            </div>
                        }

                        if (canEdit)
                        {
                            <div class="d-flex flex-wrap gap-2">
                                <a asp-action="Edit" asp-route-id="@item.Id" asp-route-returnUrl="@returnUrl" asp-require-permission="@editPermission">تعديل</a>
                                <form asp-action="Delete" asp-route-id="@item.Id" asp-route-returnUrl="@returnUrl" method="post" class="d-inline" asp-require-permission="@deletePermission">
                                    <button type="submit" class="btn btn-link p-0 m-0 align-baseline text-danger">حذف</button>
                                </form>
                            </div>
                        }
                    }

                    @if (item.SenderJournalEntryId.HasValue)
                    {
                        <a asp-action="PrintSend" asp-route-id="@item.Id" asp-route-returnUrl="@returnUrl" asp-require-permission="@printPermission" target="_blank" rel="noopener">طباعة سند إرسال</a>
                    }

                    @if (item.Status == TransferStatus.Accepted && item.JournalEntryId.HasValue)
                    {
                        <a asp-action="PrintReceive" asp-route-id="@item.Id" asp-route-returnUrl="@returnUrl" asp-require-permission="@printPermission" target="_blank" rel="noopener">طباعة سند استلام</a>
                    }
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
