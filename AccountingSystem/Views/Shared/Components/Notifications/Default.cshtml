@using System.Linq
@model AccountingSystem.ViewComponents.NotificationViewModel

<div class="dropdown">
    <a class="nav-link position-relative" href="#" id="notificationsDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="fa fa-bell"></i>
        @if (Model.UnreadCount > 0)
        {
            <span class="badge bg-danger rounded-pill position-absolute top-0 start-0 translate-middle">@Model.UnreadCount</span>
        }
    </a>
    <div class="dropdown-menu dropdown-menu-end p-0" aria-labelledby="notificationsDropdown" style="min-width: 320px;">
        <div class="d-flex justify-content-between align-items-center px-3 py-2 border-bottom">
            <span class="fw-bold">الإشعارات</span>
            <form asp-controller="Notifications" asp-action="MarkAllRead" method="post" class="m-0">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-link btn-sm">تحديد كمقروء</button>
            </form>
        </div>
        <div class="list-group list-group-flush" style="max-height: 320px; overflow:auto;">
            @if (!Model.Notifications.Any())
            {
                <div class="text-center text-muted py-3">لا توجد إشعارات</div>
            }
            else
            {
                foreach (var notification in Model.Notifications)
                {
                    <a class="list-group-item list-group-item-action @(notification.IsRead ? "" : "fw-bold")" href="@(string.IsNullOrEmpty(notification.Link) ? "#" : notification.Link)">
                        <div>@notification.Title</div>
                        @if (!string.IsNullOrWhiteSpace(notification.Message))
                        {
                            <small class="text-muted">@notification.Message</small>
                        }
                    </a>
                }
            }
        </div>
    </div>
</div>
