@model AccountingSystem.ViewModels.DynamicScreens.DynamicScreenEntryViewModel
@{
    ViewData["Title"] = $"إضافة حركة - {Model.Screen.DisplayName}";
    var screen = Model.Screen;
}

<h2 class="mb-4">@Model.Screen.DisplayName</h2>
@if (!string.IsNullOrWhiteSpace(Model.Screen.Description))
{
    <p class="text-muted">@Model.Screen.Description</p>
}

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Input.ScreenId" />
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <div class="row g-3">
        @if (screen.PaymentMode == AccountingSystem.Models.DynamicScreens.DynamicScreenPaymentMode.CashAndNonCash)
        {
            <div class="col-md-4">
                <label class="form-label">نوع الدفع</label>
                <select asp-for="Input.IsCash" class="form-select">
                    <option value="true">نقدي</option>
                    <option value="false">غير نقدي</option>
                </select>
            </div>
        }
        else
        {
            <input type="hidden" name="Input.IsCash" value="@(Model.Input.IsCash)" />
        }

        @if (Model.Branches.Any())
        {
            <div class="col-md-4">
                <label asp-for="Input.BranchId" class="form-label">الفرع</label>
                <select asp-for="Input.BranchId" class="form-select" asp-items="Model.Branches">
                    <option value="">اختر الفرع</option>
                </select>
                <span asp-validation-for="Input.BranchId" class="text-danger"></span>
            </div>
        }

        @for (var i = 0; i < Model.Fields.Count; i++)
        {
            var fieldVm = Model.Fields[i];
            var field = fieldVm.Field;
            var columnSpan = field.ColumnSpan;
            if (columnSpan < 1)
            {
                columnSpan = 12;
            }
            else if (columnSpan > 12)
            {
                columnSpan = 12;
            }
            <div class="col-md-@columnSpan">
                <label class="form-label">@field.Label</label>
                @if (!string.IsNullOrWhiteSpace(field.HelpText))
                {
                    <div class="form-text">@field.HelpText</div>
                }
                <input type="hidden" name="Input.Fields[@i].FieldId" value="@field.Id" />
                @switch (field.FieldType)
                {
                    case AccountingSystem.Models.DynamicScreens.DynamicScreenFieldType.Number:
                        {
                            <input type="number" step="0.01" class="form-control" name="Input.Fields[@i].Value" value="@Model.Input.Fields[i].Value" @(field.IsRequired ? "required" : null) />
                            break;
                        }
                    case AccountingSystem.Models.DynamicScreens.DynamicScreenFieldType.Date:
                        {
                            <input type="date" class="form-control" name="Input.Fields[@i].Value" value="@Model.Input.Fields[i].Value" @(field.IsRequired ? "required" : null) />
                            break;
                        }
                    case AccountingSystem.Models.DynamicScreens.DynamicScreenFieldType.TextArea:
                        {
                            <textarea class="form-control" rows="3" name="Input.Fields[@i].Value" @(field.IsRequired ? "required" : null)>@Model.Input.Fields[i].Value</textarea>
                            break;
                        }
                    case AccountingSystem.Models.DynamicScreens.DynamicScreenFieldType.Select:
                        {
                            <select class="form-select" name="Input.Fields[@i].Value" @(field.IsRequired ? "required" : null)>
                                <option value="">اختر</option>
                                @foreach (var option in fieldVm.Options)
                                {
                                    <option value="@option.Value" selected="@(option.Selected ? "selected" : null)">@option.Text</option>
                                }
                            </select>
                            break;
                        }
                    case AccountingSystem.Models.DynamicScreens.DynamicScreenFieldType.Toggle:
                        {
                            var isChecked = string.Equals(Model.Input.Fields[i].Value, "true", StringComparison.OrdinalIgnoreCase);
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" name="Input.Fields[@i].Value" value="true" @(isChecked ? "checked" : null) />
                            </div>
                            break;
                        }
                    default:
                        {
                            <input type="text" class="form-control" name="Input.Fields[@i].Value" value="@Model.Input.Fields[i].Value" @(field.IsRequired ? "required" : null) />
                            break;
                        }
                }
                <span class="text-danger field-validation-valid" data-valmsg-for="Input.Fields[@i].Value" data-valmsg-replace="true"></span>
            </div>
        }
    </div>

    <div class="mt-4 text-end">
        <button type="submit" class="btn btn-primary"><i class="fa fa-save ms-1"></i> حفظ</button>
        <a asp-action="Index" asp-route-id="@Model.Screen.Id" class="btn btn-secondary">إلغاء</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
