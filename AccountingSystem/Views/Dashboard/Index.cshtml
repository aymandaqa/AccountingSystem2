@using AccountingSystem.ViewModels
@using Microsoft.AspNetCore.Authorization
@using System.Linq
@model DashboardViewModel
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "لوحة التحكم";
    Layout = "_AccountingLayout";
    var canViewStats = (await AuthorizationService.AuthorizeAsync(User, "dashboard.widget.stats")).Succeeded;
    var canViewAccounts = (await AuthorizationService.AuthorizeAsync(User, "dashboard.widget.accounts")).Succeeded;
    var canViewLinks = (await AuthorizationService.AuthorizeAsync(User, "dashboard.widget.links")).Succeeded;
    var canViewCashBoxes = (await AuthorizationService.AuthorizeAsync(User, "dashboard.widget.cashboxes")).Succeeded;
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-tachometer-alt me-2"></i>
                        لوحة التحكم الرئيسية
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <label for="branchFilter" class="form-label">فلتر حسب الفرع:</label>
                            <select id="branchFilter" class="form-select" onchange="applyFilters()">
                                <option value="">جميع الفروع</option>
                                @if (ViewBag.Branches != null)
                                {
                                    @foreach (var branch in ViewBag.Branches)
                                    {
                                        <option value="@branch.Id" selected="@(Model.SelectedBranchId == branch.Id ? "selected" : null)">
                                            @branch.NameAr
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="fromDateFilter" class="form-label">من تاريخ:</label>
                            <input type="date" id="fromDateFilter" class="form-control" value="@Model.FromDate.ToString("yyyy-MM-dd")" onchange="applyFilters()" />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="toDateFilter" class="form-label">إلى تاريخ:</label>
                            <input type="date" id="toDateFilter" class="form-control" value="@Model.ToDate.ToString("yyyy-MM-dd")" onchange="applyFilters()" />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="currencyFilter" class="form-label">العملة:</label>
                            <select id="currencyFilter" class="form-select" onchange="applyFilters()">
                                <option value="">@Model.BaseCurrencyCode</option>
                                @if (ViewBag.Currencies != null)
                                {
                                    @foreach (var currency in ViewBag.Currencies)
                                    {
                                        <option value="@currency.Id" selected="@(Model.SelectedCurrencyId == currency.Id ? "selected" : null)">@currency.Code</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- إحصائيات سريعة -->
    @if (canViewStats)
    {
        <div class="row mb-4">
            <div class="col-lg-2 col-md-4 mb-3">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">إجمالي الأصول</h6>
                                <h4 class="mb-0">(@Model.TotalAssets.ToString("N0") @Model.SelectedCurrencyCode) <small class="text-muted">(@Model.TotalAssetsBase.ToString("N0") @Model.BaseCurrencyCode)</small></h4>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-chart-line fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-2 col-md-4 mb-3">
                <div class="card bg-danger text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">إجمالي الخصوم</h6>
                                <h4 class="mb-0">(@Model.TotalLiabilities.ToString("N0") @Model.SelectedCurrencyCode) <small class="text-muted">(@Model.TotalLiabilitiesBase.ToString("N0") @Model.BaseCurrencyCode)</small></h4>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-balance-scale fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-2 col-md-4 mb-3">
                <div class="card bg-secondary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">إجمالي حقوق الملكية</h6>
                                <h4 class="mb-0">(@Model.TotalEquity.ToString("N0") @Model.SelectedCurrencyCode) <small class="text-muted">(@Model.TotalEquityBase.ToString("N0") @Model.BaseCurrencyCode)</small></h4>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-university fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-2 col-md-4 mb-3">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">إجمالي الإيرادات</h6>
                                <h4 class="mb-0">(@Model.TotalRevenues.ToString("N0") @Model.SelectedCurrencyCode) <small class="text-muted">(@Model.TotalRevenuesBase.ToString("N0") @Model.BaseCurrencyCode)</small></h4>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-dollar-sign fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-2 col-md-4 mb-3">
                <div class="card bg-warning text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">إجمالي المصروفات</h6>
                                <h4 class="mb-0">(@Model.TotalExpenses.ToString("N0") @Model.SelectedCurrencyCode) <small class="text-muted">(@Model.TotalExpensesBase.ToString("N0") @Model.BaseCurrencyCode)</small></h4>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-shopping-cart fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-2 col-md-4 mb-3">
                <div class="card bg-info text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">صافي الربح</h6>
                                <h4 class="mb-0">(@Model.NetIncome.ToString("N0") @Model.SelectedCurrencyCode) <small class="text-muted">(@Model.NetIncomeBase.ToString("N0") @Model.BaseCurrencyCode)</small></h4>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-chart-pie fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- أرصدة الصناديق -->
    @if (canViewCashBoxes)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-cash-register me-2"></i>
                            أرصدة الصناديق
                        </h5>
                        <button type="button" class="btn btn-sm btn-outline-secondary cashbox-card-toggle" id="cashboxesToggle" aria-expanded="true" aria-controls="cashboxesCardBody" title="إظهار/إخفاء أرصدة الصناديق">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                    <div class="card-body" id="cashboxesCardBody">
                        @if (Model.CashBoxes.Any())
                        {
                            var groupedCashBoxes = Model.CashBoxes
                                .GroupBy(cb => string.IsNullOrWhiteSpace(cb.BranchName) ? "غير محدد" : cb.BranchName)
                                .OrderBy(g => g.Key)
                                .ToList();
                            <div class="cashbox-tree">
                                @foreach (var branchGroup in groupedCashBoxes)
                                {
                                    var branchDisplayName = branchGroup.Key;
                                    var branchTotalAccount = branchGroup.Sum(cb => cb.Balance);
                                    var branchTotalSelected = branchGroup.Sum(cb => cb.BalanceSelected);
                                    var branchTotalBase = branchGroup.Sum(cb => cb.BalanceBase);
                                    <div class="cashbox-node" data-branch-name="@branchDisplayName">
                                        <div class="cashbox-node-content">
                                            <button class="cashbox-toggle" type="button" aria-expanded="true">
                                                <i class="fas fa-minus"></i>
                                            </button>
                                            <div class="cashbox-node-info">
                                                <div class="cashbox-branch-title">
                                                    <span class="fw-bold">@branchDisplayName</span>
                                                    <small class="text-muted">عدد الحسابات: @branchGroup.Count()</small>
                                                </div>
                                                <div class="cashbox-branch-values">
                                                    <span class="cashbox-value" title="إجمالي رصيد عملة الحساب">@branchTotalAccount.ToString("N2")</span>
                                                    <span class="cashbox-value text-primary" title="إجمالي الرصيد بالعملة المختارة">(@branchTotalSelected.ToString("N2") @Model.SelectedCurrencyCode)</span>
                                                    <span class="cashbox-value text-muted" title="إجمالي الرصيد بالعملة الأساسية">(@branchTotalBase.ToString("N2") @Model.BaseCurrencyCode)</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="cashbox-children">
                                            @foreach (var cb in branchGroup.OrderBy(c => c.AccountName))
                                            {
                                                <div class="cashbox-leaf">
                                                    <div class="cashbox-leaf-info">
                                                        <i class="fas fa-wallet text-muted"></i>
                                                        <span class="cashbox-account-name">@cb.AccountName</span>
                                                    </div>
                                                    <div class="cashbox-leaf-values">
                                                        <span class="cashbox-value" title="رصيد عملة الحساب">@cb.Balance.ToString("N2")</span>
                                                        <span class="cashbox-value text-primary" title="الرصيد بالعملة المختارة">@cb.BalanceSelected.ToString("N2") @Model.SelectedCurrencyCode</span>
                                                        <span class="cashbox-value text-muted" title="الرصيد بالعملة الأساسية">@cb.BalanceBase.ToString("N2") @Model.BaseCurrencyCode</span>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info text-center">
                                لا توجد بيانات لعرضها
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- أرصدة الحسابات -->
    @if (canViewAccounts)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-sitemap me-2"></i>
                            أرصدة الحسابات حسب النوع
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (Model.AccountTypeTrees.Any())
                        {
                            <div class="tree-container">
                                @{
                                    ViewData["SelectedCurrencyCode"] = Model.SelectedCurrencyCode; ViewData["BaseCurrencyCode"] = Model.BaseCurrencyCode;
                                }
                                @await Html.PartialAsync("_AccountBalanceTreeNode", Model.AccountTypeTrees)
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info text-center">
                                لا توجد بيانات لعرضها
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- الروابط السريعة -->
    @if (canViewLinks)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-link me-2"></i>
                            الروابط السريعة
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                                <a href="@Url.Action("Index", "Accounts")" class="btn btn-outline-primary w-100">
                                    <i class="fas fa-list-alt d-block mb-2"></i>
                                    إدارة الحسابات
                                </a>
                            </div>
                            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                                <a href="@Url.Action("Tree", "Accounts")" class="btn btn-outline-success w-100">
                                    <i class="fas fa-sitemap d-block mb-2"></i>
                                    شجرة الحسابات
                                </a>
                            </div>
                            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                                <a href="@Url.Action("Index", "JournalEntries")" class="btn btn-outline-info w-100">
                                    <i class="fas fa-book d-block mb-2"></i>
                                    القيود المالية
                                </a>
                            </div>
                            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                                <a href="@Url.Action("Index", "Reports")" class="btn btn-outline-warning w-100">
                                    <i class="fas fa-chart-bar d-block mb-2"></i>
                                    التقارير المالية
                                </a>
                            </div>
                            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                                <a href="@Url.Action("Index", "Branches")" class="btn btn-outline-secondary w-100">
                                    <i class="fas fa-building d-block mb-2"></i>
                                    إدارة الفروع
                                </a>
                            </div>
                            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                                <a href="@Url.Action("Index", "CostCenters")" class="btn btn-outline-dark w-100">
                                    <i class="fas fa-bullseye d-block mb-2"></i>
                                    مراكز التكلفة
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Styles {
    <style>
        .tree-container {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .tree-node {
            margin: 5px 0;
            padding: 8px;
            border-radius: 5px;
        }

        .tree-node-content {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .tree-node-info {
            display: flex;
            align-items: center;
            flex-grow: 1;
        }

        .tree-children {
            margin-right: 25px;
            border-right: 2px solid #e9ecef;
            padding-right: 15px;
        }

        .account-code {
            font-weight: bold;
            color: #495057;
            margin-left: 10px;
        }

        .account-name {
            color: #212529;
            margin-left: 10px;
        }

        .toggle-btn {
            background: none;
            border: none;
            color: #6c757d;
            cursor: pointer;
            padding: 0;
            margin-left: 5px;
            width: 20px;
            text-align: center;
        }

            .toggle-btn:hover {
                color: #495057;
            }

        .cashbox-tree {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .cashbox-node {
            border: 1px solid #e9ecef;
            border-radius: 6px;
            margin-bottom: 12px;
            background-color: #ffffff;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.03);
        }

        .cashbox-node-content {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.75rem 1rem;
            background-color: #f8f9fa;
        }

        .cashbox-toggle {
            background: none;
            border: none;
            color: #6c757d;
            cursor: pointer;
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

            .cashbox-toggle:hover {
                color: #0d6efd;
                background-color: rgba(13, 110, 253, 0.1);
            }

        .cashbox-card-toggle {
            min-width: 32px;
        }

        .cashbox-node-info {
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            gap: 0.35rem;
        }

        .cashbox-branch-title {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .cashbox-branch-values {
            display: flex;
            align-items: baseline;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        .cashbox-children {
            padding: 0.75rem 1rem;
            border-top: 1px solid #e9ecef;
            background-color: #fff;
        }

        .cashbox-leaf {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0.5rem 0;
            border-bottom: 1px dashed #e9ecef;
            gap: 0.75rem;
        }

            .cashbox-leaf:last-child {
                border-bottom: none;
            }

        .cashbox-leaf-info {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
            color: #212529;
        }

        .cashbox-leaf-values {
            display: flex;
            align-items: baseline;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        .cashbox-value {
            white-space: nowrap;
            font-size: 0.95rem;
        }

        @media (max-width: 576px) {
            .cashbox-node-content {
                flex-direction: column;
                align-items: flex-start;
            }

            .cashbox-branch-title {
                flex-wrap: wrap;
            }

            .cashbox-leaf {
                flex-direction: column;
                align-items: flex-start;
            }

            .cashbox-leaf-values {
                width: 100%;
            }
        }
    </style>
}

@section Scripts {
    <script>
        function applyFilters() {
            const branchId = document.getElementById('branchFilter').value;
            const fromDate = document.getElementById('fromDateFilter').value;
            const toDate = document.getElementById('toDateFilter').value;
            const currencyId = document.getElementById('currencyFilter').value;
            const url = new URL(window.location);
            if (branchId) {
                url.searchParams.set('branchId', branchId);
            } else {
                url.searchParams.delete('branchId');
            }
            if (fromDate) {
                url.searchParams.set('fromDate', fromDate);
            } else {
                url.searchParams.delete('fromDate');
            }
            if (toDate) {
                url.searchParams.set('toDate', toDate);
            } else {
                url.searchParams.delete('toDate');
            }
            if (currencyId) {
                url.searchParams.set('currencyId', currencyId);
            } else {
                url.searchParams.delete('currencyId');
            }
            window.location.href = url.toString();
        }

        $(function () {
            var storage = null;
            if (typeof window !== 'undefined') {
                try {
                    storage = window.localStorage;
                } catch (err) {
                    storage = null;
                }
            }

            var $cashboxBody = $('#cashboxesCardBody');
            var $cashboxToggle = $('#cashboxesToggle');
            var cardStorageKey = 'dashboard.cashboxes.collapsed';

            if ($cashboxToggle.length) {
                var isCollapsed = storage && storage.getItem(cardStorageKey) === 'true';
                if (isCollapsed) {
                    $cashboxBody.hide();
                    $cashboxToggle.attr('aria-expanded', 'false').html('<i class="fas fa-plus"></i>');
                } else {
                    $cashboxToggle.attr('aria-expanded', 'true').html('<i class="fas fa-minus"></i>');
                }

                $cashboxToggle.on('click', function () {
                    var visible = $cashboxBody.is(':visible');
                    if (visible) {
                        $cashboxBody.slideUp(200);
                        $cashboxToggle.attr('aria-expanded', 'false').html('<i class="fas fa-plus"></i>');
                        if (storage) {
                            storage.setItem(cardStorageKey, 'true');
                        }
                    } else {
                        $cashboxBody.slideDown(200);
                        $cashboxToggle.attr('aria-expanded', 'true').html('<i class="fas fa-minus"></i>');
                        if (storage) {
                            storage.setItem(cardStorageKey, 'false');
                        }
                    }
                });
            }

            var branchStoragePrefix = 'dashboard.cashboxes.branch.';
            $('.cashbox-node').each(function () {
                var $node = $(this);
                var branchName = $node.data('branchName') || 'default';
                var storageKey = branchStoragePrefix + branchName;
                var $children = $node.find('> .cashbox-children');
                var $toggle = $node.find('> .cashbox-node-content .cashbox-toggle');

                if (!$toggle.length) {
                    return;
                }

                var storedCollapsed = storage && storage.getItem(storageKey) === 'true';
                if (storedCollapsed) {
                    $children.hide();
                    $toggle.attr('aria-expanded', 'false').html('<i class="fas fa-plus"></i>');
                } else {
                    $toggle.attr('aria-expanded', 'true').html('<i class="fas fa-minus"></i>');
                }

                $toggle.on('click', function () {
                    var isVisible = $children.is(':visible');
                    if (isVisible) {
                        $children.slideUp(200);
                        $toggle.attr('aria-expanded', 'false').html('<i class="fas fa-plus"></i>');
                        if (storage) {
                            storage.setItem(storageKey, 'true');
                        }
                    } else {
                        $children.slideDown(200);
                        $toggle.attr('aria-expanded', 'true').html('<i class="fas fa-minus"></i>');
                        if (storage) {
                            storage.setItem(storageKey, 'false');
                        }
                    }
                });
            });

            $('.toggle-btn').on('click', function () {
                var $this = $(this);
                var $children = $this.closest('.tree-node').find('> .tree-children');
                if ($children.is(':visible')) {
                    $children.hide();
                    $this.html('<i class="fas fa-plus"></i>');
                } else {
                    $children.show();
                    $this.html('<i class="fas fa-minus"></i>');
                }
            });

            $('.tree-node[data-level="0"] .toggle-btn').trigger('click');
        });
    </script>
}

