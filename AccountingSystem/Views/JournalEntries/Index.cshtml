@using System.Collections.Generic
@model AccountingSystem.ViewModels.JournalEntriesIndexViewModel

@{
    ViewData["Title"] = "القيود المالية";
    var toolbarItems = new List<string> { "Search", "ExcelExport", "Print" };
}

@section Styles {
    <style>
        .journal-entries-wrapper {
            padding-inline: clamp(0.25rem, 0.8vw, 1.5rem);
        }

        .journal-entries-card {
            min-height: calc(100vh - 6rem);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

            .journal-entries-card .card-header > .d-flex {
                gap: 1rem;
            }

            .journal-entries-card .card-body {
                display: flex;
                flex-direction: column;
                gap: 1rem;
                overflow-x: auto;
            }

        .journal-entries-grid {
            flex: 1 1 auto;
            min-height: 24rem;
        }

            .journal-entries-grid .e-grid {
                height: 100%;
            }

        .table-actions .btn {
            min-width: 2.25rem;
        }

            .table-actions .btn i {
                pointer-events: none;
            }

        .filters-card .form-label {
            font-weight: 600;
        }

        .filters-card .form-check-label {
            font-weight: 600;
        }

        .quick-search {
            flex: 1 1 16rem;
            min-width: 0;
            width: 100%;
            max-width: clamp(16rem, 24vw, 22rem);
        }

            .quick-search .form-control {
                border-inline-start: 0;
            }

            .quick-search .input-group-text {
                background-color: #f8f9fa;
            }

            .quick-search .btn-clear-search {
                border-radius: 0 var(--bs-border-radius) var(--bs-border-radius) 0;
            }

        .unbalanced-entry {
            background-color: #fdeaea;
        }

            .unbalanced-entry .e-rowcell {
                color: #b71c1c;
            }

        @@media (max-width: 767.98px) {
            .quick-search {
                width: 100%;
            }

                .quick-search .btn,
                .quick-search .input-group-text {
                    border-radius: 0;
                }
        }
    </style>
}


<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm journal-entries-card h-100">
                <div class="card-header">
                    <div class="d-flex flex-column flex-xl-row align-items-xl-center gap-3">
                        <h3 class="card-title mb-0 d-flex align-items-center gap-2">
                            <i class="fas fa-file-invoice"></i>
                            <span>القيود المالية</span>
                        </h3>
                        <div class="d-flex flex-column flex-lg-row align-items-lg-center justify-content-lg-end gap-2 w-100">
                            <div class="input-group quick-search" role="search">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input type="search" id="quickSearch" class="form-control" placeholder="بحث سريع برقم القيد أو الوصف أو المرجع" aria-label="بحث سريع" />
                                <button type="button" id="clearQuickSearch" class="btn btn-outline-secondary btn-clear-search" title="مسح البحث">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                            <a asp-action="Create" class="btn btn-primary" asp-require-permission="journal.create">
                                <i class="fas fa-plus me-1"></i>
                                إضافة قيد جديد
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body filters-card d-flex flex-column">
                    <form id="filtersForm" class="row g-3 align-items-end">
                        <div class="col-sm-6 col-lg-3">
                            <label for="fromDate" class="form-label">من تاريخ</label>
                            <input type="date" id="fromDate" class="form-control" />
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="toDate" class="form-label">إلى تاريخ</label>
                            <input type="date" id="toDate" class="form-control" />
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="branchFilter" class="form-label">الفرع</label>
                            <select id="branchFilter" class="form-select">
                                @foreach (var branch in Model.Branches)
                                {
                                    <option value="@branch.Value">@branch.Text</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="statusFilter" class="form-label">الحالة</label>
                            <select id="statusFilter" class="form-select">
                                @foreach (var status in Model.Statuses)
                                {
                                    <option value="@status.Value">@status.Text</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="groupBy" class="form-label">تجميع النتائج</label>
                            <select id="groupBy" class="form-select">
                                <option value="" selected>بدون تجميع</option>
                                <option value="BranchName">حسب الفرع</option>
                                <option value="StatusDisplay">حسب الحالة</option>
                                <option value="DateGroup">حسب الشهر</option>
                                <option value="Reference">حسب المرجع</option>
                            </select>
                        </div>
                        <div class="col-sm-6 col-lg-3 d-flex align-items-center">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" id="showUnbalancedOnly">
                                <label class="form-check-label" for="showUnbalancedOnly">عرض القيود غير المتوازنة فقط</label>
                            </div>
                        </div>
                        <div class="col-sm-6 col-lg-3 d-flex">
                            <button type="button" id="resetFilters" class="btn btn-outline-secondary w-100 mt-auto">
                                <i class="fas fa-undo"></i> إعادة تعيين
                            </button>
                        </div>
                    </form>

                    <div class="journal-entries-grid">
                        <ejs-grid id="journalEntriesGrid"
                                  allowPaging="true"
                                  allowSorting="true"
                                  allowFiltering="true"
                                  allowGrouping="true"
                                  allowExcelExport="true"
                                  allowTextWrap="true"
                                  allowResizing="true"
                                  allowReordering="true"
                                  enableStickyHeader="true"
                                  enableRtl="true"
                                  allowSelection="false"
                                  width="100%"
                                  height="100%"
                                  gridLines="Both"
                                  toolbar="@toolbarItems">
                            <e-data-manager url="@Url.Action("UrlDatasourceJournalEntries", "JournalEntries")" adaptor="UrlAdaptor"></e-data-manager>
                            <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
                            <e-grid-aggregates>
                                <e-grid-aggregate>
                                    <e-aggregate-columns>
                                        <e-aggregate-column field="TotalDebit" type="Sum" format="N2" footerTemplate="<div class='text-end fw-semibold'>إجمالي المدين: ${Sum}</div>" groupCaptionTemplate="<span class='fw-semibold text-primary'>إجمالي المدين: ${Sum}</span>"></e-aggregate-column>
                                        <e-aggregate-column field="TotalCredit" type="Sum" format="N2" footerTemplate="<div class='text-end fw-semibold'>إجمالي الدائن: ${Sum}</div>" groupCaptionTemplate="<span class='fw-semibold text-primary'>إجمالي الدائن: ${Sum}</span>"></e-aggregate-column>
                                    </e-aggregate-columns>
                                </e-grid-aggregate>
                            </e-grid-aggregates>
                            <e-grid-columns>
                                <e-grid-column field="Number" headerText="رقم القيد" width="140"></e-grid-column>
                                <e-grid-column field="Date" headerText="التاريخ" format="dd/MM/yyyy HH:mm" type="date" textAlign="Center" width="140"></e-grid-column>
                                <e-grid-column field="Description" headerText="الوصف" width="220"></e-grid-column>
                                <e-grid-column field="Reference" headerText="المرجع" width="180"></e-grid-column>
                                <e-grid-column field="BranchName" headerText="الفرع" width="180"></e-grid-column>
                                <e-grid-column field="CreatedByName" headerText="مدخل القيد" width="200"></e-grid-column>
                                <e-grid-column field="TotalDebit" headerText="إجمالي المدين" format="N2" type="number" textAlign="Right" width="160"></e-grid-column>
                                <e-grid-column field="TotalCredit" headerText="إجمالي الدائن" format="N2" type="number" textAlign="Right" width="160"></e-grid-column>
                                <e-grid-column field="LinesCount" headerText="عدد البنود" textAlign="Center" width="130"></e-grid-column>
                                <e-grid-column field="StatusDisplay" headerText="الحالة" template="#statusTemplate" textAlign="Center" width="140"></e-grid-column>
                                <e-grid-column field="DateGroup" headerText="الشهر" visible="false"></e-grid-column>
                                <e-grid-column field="IsBalanced" visible="false"></e-grid-column>
                                <e-grid-column field="Id" headerText="الإجراءات" template="#actionsTemplate" textAlign="Center" width="210" allowSorting="false" allowFiltering="false"></e-grid-column>
                            </e-grid-columns>
                        </ejs-grid>
                    </div>

                    <form id="antiForgeryForm" asp-action="Post" method="post" class="d-none">
                        @Html.AntiForgeryToken()
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script id="statusTemplate" type="text/x-template">
        <span class="badge ${StatusClass}">${StatusDisplay}</span>
    </script>

    <script id="actionsTemplate" type="text/x-template">
        <div class="d-flex justify-content-center flex-wrap gap-2 table-actions" role="group">
            <a href="@Url.Action("Details", "JournalEntries")/${Id}" class="btn btn-sm btn-outline-info" title="عرض" asp-require-permission="journal.view">
                <i class="fas fa-eye"></i>
            </a>
            ${if(IsDraft)}
            <a href="@Url.Action("Edit", "JournalEntries")/${Id}" class="btn btn-sm btn-outline-warning" title="تعديل" asp-require-permission="journal.edit">
                <i class="fas fa-edit"></i>
            </a>
            <button type="button" class="btn btn-sm btn-outline-success btn-post-entry" data-id="${Id}" data-number="${Number}" title="ترحيل" asp-require-permission="journal.approve">
                <i class="fas fa-share"></i>
            </button>
            ${/if}
            <a href="@Url.Action("Print", "JournalEntries")/${Id}" target="_blank" class="btn btn-sm btn-outline-secondary" title="طباعة">
                <i class="fas fa-print"></i>
            </a>
            ${if(CanDelete)}
            <button type="button" class="btn btn-sm btn-outline-danger btn-delete-entry" data-id="${Id}" data-number="${Number}" title="إلغاء" asp-require-permission="journal.delete">
                <i class="fas fa-trash"></i>
            </button>
            ${/if}
        </div>
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var dataUrl = '@Url.Action("UrlDatasourceJournalEntries", "JournalEntries")';
            var postUrlBase = '@Url.Action("Post", "JournalEntries")';
            var deleteUrlBase = '@Url.Action("Delete", "JournalEntries")';
            var gridElement = document.getElementById('journalEntriesGrid');
            var searchInput = document.getElementById('quickSearch');
            var clearSearchButton = document.getElementById('clearQuickSearch');
            var unbalancedToggle = document.getElementById('showUnbalancedOnly');
            if (!gridElement || !gridElement.ej2_instances || !gridElement.ej2_instances.length) {
                return;
            }

            var grid = gridElement.ej2_instances[0];
            var trackedRequestTypes = ['paging', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'refresh'];
            var antiForgeryInput = document.querySelector('#antiForgeryForm input[name="__RequestVerificationToken"]');
            var antiForgeryToken = antiForgeryInput ? antiForgeryInput.value : null;

            if (!antiForgeryToken) {
                console.warn('Anti-forgery token was not found. Requests may be rejected.');
            }

            function buildRequestOptions(options) {
                var headers = Object.assign({}, options.headers);
                if (antiForgeryToken) {
                    headers['RequestVerificationToken'] = antiForgeryToken;
                }
                return Object.assign({}, options, { headers: headers });
            }

            grid.pageSettings = { pageSize: 25, pageSizes: [10, 25, 50, 100, 'All'] };
            grid.groupSettings = { showDropArea: false };
            grid.searchSettings = { fields: ['Number', 'Description', 'Reference', 'BranchName', 'CreatedByName', 'StatusDisplay', 'TotalDebitFormatted', 'TotalCreditFormatted'], operator: 'contains', key: '', ignoreCase: true };
            grid.sortSettings = { columns: [{ field: 'Date', direction: 'Descending' }] };

            function buildQuery(searchValue) {
                var query = new ej.data.Query();
                var fromDate = document.getElementById('fromDate').value;
                var toDate = document.getElementById('toDate').value;
                var branchId = document.getElementById('branchFilter').value;
                var status = document.getElementById('statusFilter').value;
                var showUnbalancedOnly = unbalancedToggle && unbalancedToggle.checked;
                var searchTerm = (searchValue || '').trim();

                if (fromDate) query = query.addParams('fromDate', fromDate);
                if (toDate) query = query.addParams('toDate', toDate);
                if (branchId) query = query.addParams('branchId', branchId);
                if (status) query = query.addParams('status', status);
                if (showUnbalancedOnly) query = query.addParams('showUnbalancedOnly', 'true');
                if (searchTerm) query = query.addParams('searchTerm', searchTerm);

                return query;
            }

            function updateGridHeight() {
                var gridRect = gridElement.getBoundingClientRect();
                var availableHeight = window.innerHeight - gridRect.top - 48;
                grid.height = Math.max(availableHeight, 420);
            }

            updateGridHeight();
            window.addEventListener('resize', updateGridHeight);

            grid.rowDataBound = function (args) {
                if (!args || !args.row) {
                    return;
                }

                args.row.classList.remove('unbalanced-entry');

                if (args.data && args.data.IsBalanced === false) {
                    args.row.classList.add('unbalanced-entry');
                }
            };

            grid.actionBegin = function (args) {
                if (trackedRequestTypes.indexOf(args.requestType) > -1) {
                    showLoading();
                }
            };

            grid.actionComplete = function (args) {
                if (trackedRequestTypes.indexOf(args.requestType) > -1) {
                    hideLoading();
                }
            };

            grid.dataBound = function () {
                hideLoading();
            };

            grid.actionFailure = function () {
                hideLoading();
            };

            function getQuickSearchValue() {
                return searchInput ? searchInput.value.trim() : '';
            }

            function reloadGrid() {
                showLoading();
                var searchValue = getQuickSearchValue();
                grid.query = buildQuery(searchValue);
                var normalizedSearch = (searchValue || '').trim();
                if (grid.searchSettings.key !== normalizedSearch) {
                    grid.searchSettings.key = normalizedSearch;
                }
                grid.refresh();
            }

            grid.query = buildQuery(getQuickSearchValue());
            grid.dataSource = new ej.data.DataManager({
                url: dataUrl,
                adaptor: new ej.data.UrlAdaptor()
            });

            ['fromDate', 'toDate', 'branchFilter', 'statusFilter'].forEach(function (id) {
                var element = document.getElementById(id);
                if (!element) return;
                element.addEventListener('change', function () {
                    grid.pageSettings.currentPage = 1;
                    reloadGrid();
                });
            });

            if (unbalancedToggle) {
                unbalancedToggle.addEventListener('change', function () {
                    grid.pageSettings.currentPage = 1;
                    reloadGrid();
                });
            }

            var resetButton = document.getElementById('resetFilters');
            if (resetButton) {
                resetButton.addEventListener('click', function () {
                    document.getElementById('fromDate').value = '';
                    document.getElementById('toDate').value = '';
                    document.getElementById('branchFilter').selectedIndex = 0;
                    document.getElementById('statusFilter').selectedIndex = 0;
                    document.getElementById('groupBy').value = '';
                    if (unbalancedToggle) {
                        unbalancedToggle.checked = false;
                    }

                    grid.clearFiltering();
                    grid.clearSorting();
                    grid.searchSettings.key = '';
                    grid.clearGrouping();
                    grid.pageSettings.currentPage = 1;
                    reloadGrid();
                    if (searchInput) {
                        searchInput.value = '';
                    }
                });
            }

            var groupSelect = document.getElementById('groupBy');
            if (groupSelect) {
                if (groupSelect.value) {
                    grid.clearGrouping();
                    grid.groupColumn(groupSelect.value);
                }
                groupSelect.addEventListener('change', function (event) {
                    grid.clearGrouping();
                    var value = event.target.value;
                    if (value) {
                        grid.groupColumn(value);
                    }
                });
            }

            function executeSearch() {
                if (!searchInput) {
                    return;
                }
                grid.pageSettings.currentPage = 1;
                reloadGrid();
            }

            var searchDebounce;
            if (searchInput) {
                searchInput.addEventListener('keyup', function (event) {
                    if (event.key === 'Enter') {
                        executeSearch();
                    }
                });

                searchInput.addEventListener('change', executeSearch);
                searchInput.addEventListener('search', executeSearch);
                searchInput.addEventListener('input', function () {
                    clearTimeout(searchDebounce);
                    searchDebounce = setTimeout(executeSearch, 350);
                });
            }

            if (clearSearchButton) {
                clearSearchButton.addEventListener('click', function () {
                    if (!searchInput) {
                        return;
                    }
                    searchInput.value = '';
                    grid.pageSettings.currentPage = 1;
                    reloadGrid();
                });
            }

            grid.toolbarClick = function (args) {
                if (args.item && typeof args.item.id === 'string' && args.item.id.toLowerCase().indexOf('excelexport') !== -1) {
                    grid.excelExport({
                        fileName: 'journal-entries.xlsx',
                        header: {
                            headerRows: 2,
                            rows: [
                                { cells: [{ colSpan: 6, value: 'قائمة القيود المالية', style: { fontSize: 16, bold: true, hAlign: 'Right' } }] },
                                { cells: [{ colSpan: 6, value: 'تاريخ التصدير: ' + new Date().toLocaleString(), style: { hAlign: 'Right' } }] }
                            ]
                        }
                    });
                    args.cancel = true;
                }
            };

            document.getElementById('journalEntriesGrid').addEventListener('click', function (event) {
                var postButton = event.target.closest('.btn-post-entry');
                if (postButton) {
                    var postId = postButton.getAttribute('data-id');
                    var postNumber = postButton.getAttribute('data-number');
                    if (!postId) {
                        return;
                    }

                    if (!confirm('هل تريد ترحيل القيد رقم ' + postNumber + '?')) {
                        return;
                    }

                    showLoading();
                    $.ajax(buildRequestOptions({
                        url: postUrlBase + '/' + postId,
                        type: 'POST',
                        success: function () {
                            hideLoading();
                            grid.refresh();
                            if (window.swal) {
                                swal({ title: 'تم الترحيل بنجاح', icon: 'success', button: 'حسناً' });
                            } else {
                                alert('تم ترحيل القيد بنجاح');
                            }
                        },
                        error: function (xhr) {
                            hideLoading();
                            var message = xhr.responseText || 'تعذر ترحيل القيد.';
                            if (window.swal) {
                                swal({ title: 'خطأ', text: message, icon: 'error', button: 'إغلاق' });
                            } else {
                                alert(message);
                            }
                        }
                    }));
                    return;
                }

                var deleteButton = event.target.closest('.btn-delete-entry');
                if (!deleteButton) {
                    return;
                }

                var deleteId = deleteButton.getAttribute('data-id');
                var deleteNumber = deleteButton.getAttribute('data-number');
                if (!deleteId) {
                    return;
                }

                if (!confirm('هل تريد إلغاء القيد رقم ' + deleteNumber + '?')) {
                    return;
                }

                showLoading();
                $.ajax(buildRequestOptions({
                    url: deleteUrlBase + '/' + deleteId,
                    type: 'POST',
                    success: function () {
                        hideLoading();
                        grid.refresh();
                        if (window.swal) {
                            swal({ title: 'تم الإلغاء بنجاح', icon: 'success', button: 'حسناً' });
                        } else {
                            alert('تم إلغاء القيد بنجاح');
                        }
                    },
                    error: function (xhr) {
                        hideLoading();
                        var message = xhr.responseText || 'تعذر إلغاء القيد.';
                        if (window.swal) {
                            swal({ title: 'خطأ', text: message, icon: 'error', button: 'إغلاق' });
                        } else {
                            alert(message);
                        }
                        }
                }));
            });
        });
    </script>
}
