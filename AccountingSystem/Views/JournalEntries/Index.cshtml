@using System.Linq
@model AccountingSystem.ViewModels.JournalEntriesIndexViewModel

@{
    ViewData["Title"] = "القيود المالية";
    Layout = "~/Views/Shared/_AccountingLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.bootstrap5.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/rowgroup/1.3.1/css/rowGroup.bootstrap5.min.css" />
    <style>
        .dt-buttons .btn {
            margin-left: .5rem;
            margin-right: .5rem;
        }

        table.dataTable tbody tr.group-header td {
            background-color: #f1f3f5;
            font-weight: 700;
            color: #0d6efd;
        }

        #journalEntriesTable thead tr.filters-row th {
            background-color: #f8f9fa;
            font-weight: 400;
        }

        #journalEntriesTable thead input,
        #journalEntriesTable thead select {
            max-width: 100%;
        }

        .dataTables_wrapper .dataTables_processing {
            top: 50%;
            z-index: 1000;
        }

        .table-actions .btn {
            margin-inline-start: .25rem;
            margin-inline-end: .25rem;
        }
    </style>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header d-flex flex-column flex-lg-row align-items-lg-center justify-content-between gap-2">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-file-invoice me-2"></i>
                        القيود المالية
                    </h3>
                    <div class="d-flex flex-column flex-md-row align-items-md-center gap-2">
                        <a asp-action="Create" class="btn btn-primary">
                            <i class="fas fa-plus me-1"></i>
                            إضافة قيد جديد
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <form id="filtersForm" class="row g-3 align-items-end mb-3">
                        <div class="col-sm-6 col-lg-3">
                            <label for="fromDate" class="form-label">من تاريخ</label>
                            <input type="date" id="fromDate" class="form-control" />
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="toDate" class="form-label">إلى تاريخ</label>
                            <input type="date" id="toDate" class="form-control" />
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="branchFilter" class="form-label">الفرع</label>
                            <select id="branchFilter" class="form-select">
                                @foreach (var branch in Model.Branches)
                                {
                                    <option value="@branch.Value">@branch.Text</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="statusFilter" class="form-label">الحالة</label>
                            <select id="statusFilter" class="form-select">
                                @foreach (var status in Model.Statuses)
                                {
                                    <option value="@status.Value">@status.Text</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <label for="groupBy" class="form-label">تجميع النتائج</label>
                            <select id="groupBy" class="form-select">
                                <option value="">بدون تجميع</option>
                                <option value="branchName">حسب الفرع</option>
                                <option value="statusDisplay">حسب الحالة</option>
                                <option value="dateGroup">حسب الشهر</option>
                            </select>
                        </div>
                        <div class="col-sm-6 col-lg-3 d-flex">
                            <button type="button" id="resetFilters" class="btn btn-outline-secondary w-100 mt-auto">
                                <i class="fas fa-undo"></i> إعادة تعيين
                            </button>
                        </div>
                    </form>

                    <div class="table-responsive">
                        <table id="journalEntriesTable" class="table table-striped table-hover align-middle w-100">
                            <thead>
                                <tr>
                                    <th>رقم القيد</th>
                                    <th>التاريخ</th>
                                    <th>الوصف</th>
                                    <th>المرجع</th>
                                    <th>الفرع</th>
                                    <th>المبلغ الإجمالي</th>
                                    <th>عدد البنود</th>
                                    <th>الحالة</th>
                                    <th>الإجراءات</th>
                                </tr>
                                <tr class="filters-row">
                                    <th><input type="text" class="form-control form-control-sm column-search" data-column="0" placeholder="بحث..." /></th>
                                    <th><input type="date" class="form-control form-control-sm column-search" data-column="1" /></th>
                                    <th><input type="text" class="form-control form-control-sm column-search" data-column="2" placeholder="بحث..." /></th>
                                    <th><input type="text" class="form-control form-control-sm column-search" data-column="3" placeholder="بحث..." /></th>
                                    <th><input type="text" class="form-control form-control-sm column-search" data-column="4" placeholder="بحث..." /></th>
                                    <th><input type="number" step="0.01" class="form-control form-control-sm column-search" data-column="5" placeholder="=" /></th>
                                    <th><input type="number" class="form-control form-control-sm column-search" data-column="6" placeholder="=" /></th>
                                    <th>
                                        <select class="form-select form-select-sm column-search" data-column="7">
                                            <option value="">الكل</option>
                                            @foreach (var status in Model.Statuses.Where(s => !string.IsNullOrEmpty(s.Value)))
                                            {
                                                <option value="@status.Value">@status.Text</option>
                                            }
                                        </select>
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>

                    <form id="antiForgeryForm" asp-action="Post" method="post" class="d-none">
                        @Html.AntiForgeryToken()
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.bootstrap5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/rowgroup/1.3.1/js/dataTables.rowGroup.min.js"></script>
    <script>
        (function () {
            const formatCurrency = value => new Intl.NumberFormat('ar-EG', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }).format(value ?? 0);

            const detailsUrlBase = '@Url.Action("Details", "JournalEntries")';
            const editUrlBase = '@Url.Action("Edit", "JournalEntries")';
            const postUrlBase = '@Url.Action("Post", "JournalEntries")';
            const printUrlBase = '@Url.Action("Print", "JournalEntries")';

            const table = $('#journalEntriesTable').DataTable({
                processing: true,
                serverSide: true,
                deferRender: true,
                ajax: {
                    url: '@Url.Action("GetEntries", "JournalEntries")',
                    data: function (d) {
                        d.fromDate = $('#fromDate').val();
                        d.toDate = $('#toDate').val();
                        d.branchId = $('#branchFilter').val();
                        d.status = $('#statusFilter').val();
                    }
                },
                columns: [
                    { data: 'number' },
                    { data: 'dateFormatted' },
                    { data: 'description' },
                    { data: 'reference' },
                    { data: 'branchName' },
                    {
                        data: 'totalAmount',
                        render: function (data, type) {
                            if (type === 'display' || type === 'filter') {
                                return `<span class="text-nowrap">${formatCurrency(data)}</span>`;
                            }
                            return data;
                        },
                        className: 'text-end'
                    },
                    { data: 'linesCount', className: 'text-center' },
                    {
                        data: 'statusDisplay',
                        render: function (data, type, row) {
                            if (type === 'display') {
                                return `<span class="badge ${row.statusClass}">${data}</span>`;
                            }
                            return data;
                        },
                        className: 'text-center'
                    },
                    {
                        data: null,
                        orderable: false,
                        searchable: false,
                        className: 'text-center text-nowrap table-actions',
                        render: function (data, type, row) {
                            const detailsUrl = `${detailsUrlBase}/${row.id}`;
                            const editUrl = `${editUrlBase}/${row.id}`;
                            const printUrl = `${printUrlBase}/${row.id}`;

                            let buttons = `
                                <a href="${detailsUrl}" class="btn btn-sm btn-outline-info" title="عرض">
                                    <i class="fas fa-eye"></i>
                                </a>`;

                            if (row.isDraft) {
                                buttons += `
                                    <a href="${editUrl}" class="btn btn-sm btn-outline-warning" title="تعديل">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-sm btn-outline-success btn-post-entry" data-id="${row.id}" data-number="${row.number}" title="ترحيل">
                                        <i class="fas fa-share"></i>
                                    </button>`;
                            }

                            buttons += `
                                <a href="${printUrl}" target="_blank" class="btn btn-sm btn-outline-secondary" title="طباعة">
                                    <i class="fas fa-print"></i>
                                </a>`;

                            return `<div class="btn-group" role="group">${buttons}</div>`;
                        }
                    }
                ],
                order: [[1, 'desc']],
                pageLength: 10,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, 'الكل']],
                dom: "<'row mb-2'<'col-sm-12 col-md-4'l><'col-sm-12 col-md-4 text-center'B><'col-sm-12 col-md-4'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row mt-2'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fas fa-file-excel me-2"></i>تصدير Excel',
                        exportOptions: { columns: ':not(:last-child)' }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print me-2"></i>طباعة جميع القيود',
                        title: 'القيود المالية',
                        exportOptions: { columns: ':not(:last-child)' },
                        customize: function (win) {
                            $(win.document.body)
                                .css('direction', 'rtl')
                                .css('font-family', '\"Tajawal\", Arial, sans-serif');
                            $(win.document.body).find('table')
                                .addClass('table table-bordered')
                                .css('direction', 'rtl');
                        }
                    }
                ],
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.6/i18n/ar.json'
                },
                rowGroup: {
                    dataSrc: 'branchName',
                    startRender: function (rows, group) {
                        const total = rows
                            .data()
                            .pluck('totalAmount')
                            .reduce((a, b) => a + parseFloat(b || 0), 0);
                        return $('<tr/>')
                            .addClass('group-header')
                            .append(`<td colspan="9">${group} - إجمالي: ${formatCurrency(total)}</td>`);
                    }
                }
            });

            table.rowGroup().disable();

            table.on('preXhr.dt', function () { showLoading(); });
            table.on('xhr.dt', function () { hideLoading(); });
            table.on('error.dt', function () { hideLoading(); });

            $('.column-search').on('change keyup', function () {
                const columnIndex = $(this).data('column');
                const value = $(this).val();
                table.column(columnIndex).search(value || '').draw();
            });

            $('#fromDate, #toDate, #branchFilter, #statusFilter').on('change', function () {
                table.ajax.reload();
            });

            $('#resetFilters').on('click', function () {
                $('#fromDate, #toDate').val('');
                $('#branchFilter option:first').prop('selected', true);
                $('#statusFilter option:first').prop('selected', true);
                $('#groupBy').val('');
                $('.column-search').each(function () {
                    $(this).val('');
                    const columnIndex = $(this).data('column');
                    table.column(columnIndex).search('');
                });
                table.rowGroup().disable();
                table.ajax.reload();
            });

            $('#groupBy').on('change', function () {
                const value = $(this).val();
                if (value) {
                    table.rowGroup().dataSrc(value).enable();
                } else {
                    table.rowGroup().disable();
                }
                table.draw();
            });

            $('#journalEntriesTable').on('click', '.btn-post-entry', function () {
                const id = $(this).data('id');
                const number = $(this).data('number');
                if (!confirm(`هل تريد ترحيل القيد رقم ${number}?`)) {
                    return;
                }

                showLoading();
                $.ajax({
                    url: `${postUrlBase}/${id}`,
                    type: 'POST',
                    success: function () {
                        hideLoading();
                        table.ajax.reload(null, false);
                        if (window.swal) {
                            swal({ title: 'تم الترحيل بنجاح', icon: 'success', button: 'حسناً' });
                        } else {
                            alert('تم ترحيل القيد بنجاح');
                        }
                    },
                    error: function (xhr) {
                        hideLoading();
                        const message = xhr.responseText || 'تعذر ترحيل القيد.';
                        if (window.swal) {
                            swal({ title: 'خطأ', text: message, icon: 'error', button: 'إغلاق' });
                        } else {
                            alert(message);
                        }
                    }
                });
            });
        })();
    </script>
}
