@model AccountingSystem.Models.ReceiptVoucher
@{
    ViewData["Title"] = "سند قبض جديد";
}

<div class="container-fluid">
    <form asp-action="Create" method="post" class="row g-3">
        <div class="col-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        </div>
        <div class="col-md-6">
            <label class="form-label">المورد</label>
            <select asp-for="SupplierId" class="form-select" id="supplierSelect">
                <option value="">-- اختر المورد --</option>
                @foreach (var s in ViewBag.Suppliers)
                {
                    <option value="@s.Id" data-account-id="@s.AccountId" data-currency-id="@s.CurrencyId" data-currency-code="@s.CurrencyCode" selected="@(Model?.SupplierId == (int?)s.Id ? "selected" : null)">
                        @s.NameAr
                    </option>
                }
            </select>
            <span asp-validation-for="SupplierId" class="text-danger"></span>
            <div class="form-text">سيتم استخدام حساب المورد المرتبط تلقائياً عند اختيار المورد.</div>
        </div>
        <div class="col-md-6">
            <label class="form-label">حساب الدفع</label>
            <input type="hidden" asp-for="AccountId" id="accountId" />
            <input type="hidden" asp-for="CurrencyId" id="currencyId" />
            <select asp-for="PaymentAccountId" class="form-select" id="paymentAccountSelect">
                <option value="">-- اختر حساب الدفع --</option>
                @foreach (var a in ViewBag.PaymentAccounts)
                {
                    <option value="@a.Id" data-currency-id="@a.CurrencyId" data-currency-code="@a.CurrencyCode" selected="@(Model?.PaymentAccountId == (int?)a.Id ? "selected" : null)">
                        @a.Code - @a.NameAr (@a.CurrencyCode)
                    </option>
                }
            </select>
            <span asp-validation-for="PaymentAccountId" class="text-danger"></span>
            <div class="form-text" id="paymentAccountCurrencyInfo">سيتم تسجيل حركة القبض على حساب الدفع المختار.</div>
        </div>
        <div class="col-md-6">
            <label class="form-label">عملة السند</label>
            <input type="text" class="form-control" id="currencyDisplay" readonly />
        </div>
        <div class="col-md-6">
            <label class="form-label">سعر الصرف</label>
            <input asp-for="ExchangeRate" class="form-control" />
            <span asp-validation-for="ExchangeRate" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label class="form-label">المبلغ</label>
            <input asp-for="Amount" class="form-control" />
            <span asp-validation-for="Amount" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label class="form-label">التاريخ</label>
            <input asp-for="Date" type="date" class="form-control" />
            <span asp-validation-for="Date" class="text-danger"></span>
        </div>
        <div class="col-md-6">
            <label class="form-label">ملاحظات</label>
            <textarea asp-for="Notes" class="form-control"></textarea>
            <span asp-validation-for="Notes" class="text-danger"></span>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-primary">حفظ</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const currencyDisplay = document.getElementById('currencyDisplay');
            const currencyId = document.getElementById('currencyId');
            const supplierSelect = document.getElementById('supplierSelect');
            const accountIdInput = document.getElementById('accountId');
            const paymentAccountSelect = document.getElementById('paymentAccountSelect');
            const paymentAccountCurrencyInfo = document.getElementById('paymentAccountCurrencyInfo');

            function updatePaymentAccountInfo() {
                const option = paymentAccountSelect.options[paymentAccountSelect.selectedIndex];
                if (!option || !option.value) {
                    paymentAccountCurrencyInfo.textContent = 'سيتم تسجيل حركة القبض على حساب الدفع المختار.';
                    return;
                }

                const currencyCode = option.getAttribute('data-currency-code');
                paymentAccountCurrencyInfo.textContent = currencyCode
                    ? `سيتم تسجيل حركة القبض على حساب الدفع المختار (${currencyCode}).`
                    : 'سيتم تسجيل حركة القبض على حساب الدفع المختار.';
            }

            function updateFromSupplier() {
                const option = supplierSelect.options[supplierSelect.selectedIndex];
                if (option && option.value) {
                    accountIdInput.value = option.getAttribute('data-account-id') || '';
                    currencyDisplay.value = option.getAttribute('data-currency-code') || '';
                    currencyId.value = option.getAttribute('data-currency-id') || '';
                } else {
                    accountIdInput.value = '';
                    currencyDisplay.value = '';
                    currencyId.value = '';
                }
            }

            supplierSelect.addEventListener('change', updateFromSupplier);
            paymentAccountSelect.addEventListener('change', updatePaymentAccountInfo);

            if (supplierSelect.value) {
                updateFromSupplier();
            } else {
                accountIdInput.value = '';
                currencyDisplay.value = '';
                currencyId.value = '';
            }

            updatePaymentAccountInfo();
        });
    </script>
}
